---
title: "Short Term Visa Accessibility"
editor_options: 
  chunk_output_type: console
execute: 
  warning: false
---
<!--- js dependencies -->
<script src="https://d3js.org/d3.v7.min.js"></script>
<script src="js/scatterplot.js"></script>

```{r}
#| include: false
oldwd <- getwd()
#setwd('~/Desktop/visa-lago/')
source(knitr::purl('explore.qmd'))
#setwd(oldwd)
country_level_2022 %>% 
  select(
    consulate_country,
    consulate_country_code,
    consulate_country_continent,
    tot_request,
    gdp_per_capita,
    ratio_rejected,
    fitted = .fitted
  ) %>% 
  write_csv('data/2022-country-level-clean.csv')
```

```{r}
ojs_define(
  country_level_2022 = country_level_2022 %>% 
    select(
      consulate_country,
      consulate_country_code,
      consulate_country_continent,
      tot_request,
      gdp_per_capita,
      ratio_rejected,
      fitted = .fitted
    ) %>% 
    drop_na() %>% 
    {
    transpose(.l = .)
  }
)
```

```{ojs}
height = 500
cb_palette = {
  let cb_palette = {
  Africa: "#228833",
  Americas: "#CCBB44",
  Asia: "#4477AA",
  Europe: "#EE6677",
  Oceania: "#AA3377",
  }
  return cb_palette
}
```

## Schengen Visa Rejection Rate in 2022

(By country in which the visa application was lodged)

```{ojs} 
Scatterplot(country_level_2022,
  {
    x: d => d.gdp_per_capita,
    y: d => d.ratio_rejected,
    area: d => d.tot_request,
    fill: d => d.consulate_country_continent,
    id: d => d.consulate_country_code,
    label: d => d.consulate_country,
    fitted: d => d.fitted,
    fillPalette: cb_palette,
    width: width,
    height: height,
    voronoiShow: false,
  }
)
```

:::: {.grid}

::: {.g-col-12 .g-col-md-6}

### Data Sources

Data on short-term visa applications and rejection rate are released publicly by the Directorate-General for Migration and Home Affairs of the European Commission, and are [available on their website](https://home-affairs.ec.europa.eu/policies/schengen-borders-and-visa/visa-policy_en#paragraph_1903).

Data on GDP per capita are estimated and made available by the World Bank, [on their website](https://datacatalog.worldbank.org/search/dataset/0037712/World-Development-Indicators). We have used the “GDP per capita, at purchasing power parity (current international $)” indicator as a basic measurement indicating average wealth per nation.
Data Analysis

:::

::: {.g-col-12 .g-col-md-6}

### Data Analysis

We have used ISO3166 alpha-3-codes to merge the data in the two datasets, relying on the R package [countrycode](https://joss.theoj.org/papers/10.21105/joss.00848) to convert country names into country codes when needed.

The regression line uses a [binomial generalised linear model](https://stat.ethz.ch/R-manual/R-devel/library/stats/html/00Index.html) to estimate conservatively how much we can expect the application rejection rate to increase when the GDP per capita of the originating country decreases. 

African countries are often outliers, with rejection rates well above what is expected by the regression line.

:::

::::

## UK Visitor Visa Rejection Rate by Nationality

```{r}
library(tidyverse)
library(janitor)
library(countrycode)
library(grid)

theme_set(theme_minimal(base_size = 16))

cb_palette <- 
  c(Africa = '#339944',
    Americas = '#DDCC55',
    Asia = '#5588BB',
    Europe = '#EE6677',
    Oceania = '#AA3377')
```

```{r}
visa_uk <- 
  read_tsv('data/UK-visas-summary-mar-2023-tables.tsv')

visa_uk <- 
  visa_uk %>% 
  mutate(grant_rate = grant_rate %>% str_remove('%') %>% as.numeric()) %>% 
  mutate(grant_rate = grant_rate/100,
         rej_rate = 1-grant_rate) %>% 
  mutate(continent = countrycode(nationality,
                             origin = 'country.name',
                             destination = 'continent'))
```

```{r}
#| fig-width: 10
#| fig-height: 9
p <-
  visa_uk %>% 
  arrange(desc(rej_rate)) %>% 
  mutate(nationality = nationality %>% as_factor()) %>% 
  ggplot() +
  aes(y = nationality,
      x = rej_rate) +
  geom_segment(aes(yend = after_stat(y),
                   xend = 0),
               linewidth = .5,
               lty = '11') +
  geom_point(aes(size = resolved,
                 fill = continent),
             alpha = 1,
             pch = 21) +
  geom_vline(xintercept = 0,
             linewidth = 1.5) +
  labs(x = "Visa Rejection Rate",
       y = "Nationality",
       size = "Size:\nApplications Received",
       fill = "Colour:\nContinent",
       title = "UK Visitor Visa Rejection Rate by Nationality",
       subtitle = "Year Ending March 2023") +
  guides(fill = guide_legend(override.aes = list(size = 5)),
         size = guide_legend(override.aes = list(shape = 21,
                                                 fill = "white"))) +
  scale_x_continuous(limits = c(0, 1.05),
                     labels = scales::percent,
                     expand = expansion(0, 0),
                     breaks = c(0, .2, .4, .6, .8, 1)) +
  scale_size_continuous(range = c(0, 15),
                        labels = scales::comma) +
  scale_fill_manual(values = cb_palette) +
  theme(panel.grid.major.y = element_blank(),
        panel.grid.minor = element_blank(),
        panel.grid.major.x = element_line(colour = 'black',
                                          size = .1),
        # axis.title = element_text(hjust = 1),
        legend.justification = "top")

# ggsave(plot = p,
#        filename = 'output/uk-visa.jpg',
#        width = 10, height = 10)

p <- ggplotGrob(p)

# png(filename = 'output/uk-visa-2023-q1.png',
#     width = 25,
#     height = 25,
#     units = "cm",
#     res = 300)
grid.newpage()
grid.draw(p)
grid.text(x = 0.76,
          y = 0.4,
          gp = gpar(fontsize = 12),
          label = str_wrap(
            "Visitor visa applications and outcomes, by nationality, in the year ending March 2023. Top 20 nationalities applying for visitor visas in the year. Data relates to entry clearance visa applications made outside the UK. Includes main applicants and dependants.",
            width = 28),
          hjust = 0,
          vjust = 1)
grid.text(x = 0.76,
          y = 0.10,
          gp = gpar(fontsize = 8),
          label = str_wrap(
            "Data from www.gov.uk",
            width = 28),
          hjust = 0,
          vjust = 1)
# dev.off()
```

